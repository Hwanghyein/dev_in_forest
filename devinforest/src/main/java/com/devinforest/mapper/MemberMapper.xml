<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.devinforest.mapper.MemberMapper">
	<!-- 회원 재가입 요청 -->
	<insert id="insertRequestRestore" parameterType="com.devinforest.vo.Restoration" >
		Insert into dev_restoration(
			restoration_title,
			restoration_content,
			restoration_date
		)VALUES(
			#{restorationTitle},
			#{restorationContent},
			NOW()
			
		)
	</insert>
	<!-- 회원 totalCount -->
	<select id="memberTotalCount"
			parameterType="String"
			resultType="int">
		SELECT 
			COUNT(*)
		FROM dev_member
		WHERE member_name LIKE CONCAT('%',#{searchWord},'%')
		AND member_state = 'Y'
	</select>
	<!-- 회원목록 -->
	<select id="selectMemberList" resultType="com.devinforest.vo.Member">
		SELECT
		member_email as memberEmail,
		member_name as memberName,
		account_kind as accountKind,
		member_reputation as memberReputation,
		member_location as memberLocation,
		member_phone as memberPhone,
		member_link as memberLink,
		member_gender as memberGender,
		member_about as memberAbout,
		member_birth as memberBirth,
		member_date as memberDate,
		member_state as memberState
		FROM dev_member
		WHERE member_state = 'Y'
		AND member_name LIKE CONCAT('%',#{searchWord},'%')
		ORDER BY member_reputation DESC, member_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	<!-- 회원탈퇴 -->
	<update id="deleteMember"
		parameterType="com.devinforest.vo.LoginMember">
		UPDATE dev_member
		SET member_state='N',
		member_reputation='1',
		member_phone=NULL,
		member_link=NULL,
		member_gender=null,
		member_about=NULL,
		member_birth=NULL,
		member_date=NOW()
		WHERE member_password=PASSWORD(#{memberPassword})
		AND member_email=#{memberEmail}
	</update>
	<!-- 회원정보 수정 쿼리문 -->
	<update id="updateMember"
		parameterType="com.devinforest.vo.Member">
		UPDATE dev_member
		SET
		member_password=PASSWORD(#{memberPassword}),
		member_name=#{memberName},
		member_location=#{memberLocation},
		member_phone=#{memberPhone},
		member_link=#{memberLink},
		member_gender=#{memberGender},
		member_about=#{memberAbout},
		member_birth=#{memberBirth}
		WHERE member_email=#{memberEmail}
	</update>
	<!-- 회원정보 보기 -->
	<select id="selectMemberInfo"
		parameterType="com.devinforest.vo.LoginMember"
		resultType="com.devinforest.vo.Member">
		SELECT
		member_email as memberEmail,
		member_name as memberName,
		account_kind as accountKind,
		member_reputation as memberReputation,
		member_location as memberLocation,
		member_phone as memberPhone,
		member_link as memberLink,
		member_gender as memberGender,
		member_about as memberAbout,
		member_birth as memberBirth,
		member_date as memberDate,
		member_state as memberState
		FROM dev_member
		WHERE
		member_email=#{memberEmail}
	</select>
	<!-- 비밀번호 찾기 쿼리문 -->
	<update id="findMemberPw" parameterType="com.devinforest.vo.LoginMember">
		UPDATE dev_member
		SET
		member_password=PASSWORD(#{memberPassword})
		WHERE
		member_email=#{memberEmail}
		AND member_name=#{memberName}
	</update>
	<!-- 이메일 찾기 쿼리문 -->
	<select id="selectEmailByMember"
		parameterType="com.devinforest.vo.LoginMember" resultType="String">
		SELECT
			CONCAT(SUBSTRING(member_email,1,4),'***@***')
		FROM dev_member
		WHERE member_name=#{memberName}
	</select>
	<!-- 이메일 중복체크 -->
	<select id="selectMemberEmail" parameterType="String"
		resultType="String">
		SELECT
		member_email
		FROM (SELECT member_email FROM dev_member
		UNION
		SELECT member_email From
		dev_blacklist)t
		WHERE
		member_email=#{memberEmailCheck}
	</select>
	<!-- 닉네임 중복체크 -->
	<select id="selectMemberName" parameterType="String"
		resultType="String">
		SELECT
		member_name
		FROM (SELECT member_name FROM dev_member
		UNION
		SELECT member_name FROM
		dev_blacklist) t
		WHERE member_name=#{memberNameCheck}
	</select>
	<!-- 회원가입 쿼리문 -->
	<insert id="insertMember"
		parameterType="com.devinforest.vo.Member">
		INSERT INTO dev_member(
		member_email,
		member_password,
		member_name,
		member_date

		)VALUES(
		#{memberEmail},
		PASSWORD(#{memberPassword}),
		#{memberName},
		now()
		)
	</insert>
	<!-- 로그인 쿼리문 -->
	<select id="selectLoginMember"
		parameterType="com.devinforest.vo.LoginMember"
		resultType="com.devinforest.vo.LoginMember">
		SELECT
		member_email AS memberEmail, member_name AS memberName, account_kind AS accountKind , member_password AS memberPassword
		FROM (SELECT member_email, member_name, account_kind, member_password FROM dev_member
		UNION
		SELECT admin_email, admin_name, account_kind, admin_password FROM dev_admin
		UNION
		SELECT company_email, company_kor_name, account_kind, company_password FROM dev_company)e
		WHERE member_email=#{memberEmail}
		and
		member_password=PASSWORD(#{memberPassword})
	</select>
</mapper>